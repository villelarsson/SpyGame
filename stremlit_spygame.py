import streamlit as st
import random

st.set_page_config(page_title="Spy Game", layout="centered")
st.title("üïµÔ∏è Spy Game")

# H√•rdkodad ordlista (G√∂teborgs ord)
word_list = [
    "Avenyn", "Linn√©platsen", "Kungsportsplatsen", "Slottsskogen", "G√∂ta √§lv",
    "Feskek√¥rka", "Liseberg", "Skansen Kronan", "Masthuggskyrkan", "Nordstan",
    "Chalmers", "Haga", "R√∂da Sten", "√Ñlvsborgsbron", "Kungsgatan",
    "G√∂teborgsoperan", "Paddan", "Barken Viking", "M√∂lndal", "Hisingen",
    "Kviberg", "Majorna", "V√§stra Fr√∂lunda", "√ñrgryte", "Gamlestaden",
    "Backaplan", "Saltholmen", "Kungsport", "Masthugget", "Eriksberg",
    "Skat√•s", "Delsj√∂n", "Svenska M√§ssan", "Ullevi", "Nya Ullevi",
    "Lilla Bommen", "Stora Teatern", "G√∂taplatsen", "G√∂teborgs Konstmuseum",
    "Stenpiren", "K√•lltorp", "Sanneg√•rden", "Bagareg√•rden", "Redbergslid",
    "Olskroken", "Brunnsparken", "Vasa", "Gamla Ullevi", "P√∂lsehallen",
    "G√∂teborgs Stadsmuseum", "Heden", "Skandia Teatern", "Vinga", "Kortedala",
    "Tuve", "L√§nsmansg√•rden", "R√∂da Sten Konsthall", "Gunnebo Slott",
    "Bohus f√§stning", "Sven-Harrys Konstmuseum", "Volvo Torslanda",
    "G√∂teborgs Universitet", "Kronhuset", "Nefertiti", "Masthugget",
    "M√∂lndals√•n", "G√∂ta √§lvbron", "Kajskjul",
    # K√§nda g√∂teborgare / legendarer
    "Leif Loket Olsson", "H√•kan Hellstr√∂m", "Zlatan Ibrahimoviƒá", "Lotta Schelin",
    "Ingemar Johansson", "Jan Johansson", "Bengt Ekerot", "G√∂sta Ekman",
    "Peter Forsberg", "Annika S√∂renstam", "Gunnar Gren", "Henrik Lundqvist",
    "Lars Winnerb√§ck", "Greta Garbo", "Torgny Segerstedt", "Alfred Nobel",
    "Anders Celsius",
    # Platser igen
    "G√∂teborgs Konsthall", "G√∂teborgs Stadsteater", "G√∂teborgs Naturhistoriska Museum",
    "G√∂teborgs Botaniska Tr√§dg√•rd", "√ñstra Hamngatan", "S√∂dra V√§gen", "G√∂taleden",
    "J√§rntorget", "Sk√§rg√•rden", "Delsj√∂omr√•det", "Slottsberget", "Kvarnberget",
    "Ruddalen", "L√•ngedrag", "V√§stra G√∂taland", "Bohusl√§n", "Styrs√∂", "Dons√∂",
    "Vr√•ng√∂", "Br√§nn√∂", "Kung√§lv", "Torslanda", "S√§ve", "Majvallen",
    "√ñcker√∂", "H√∂n√∂", "Vinga fyr", "Skagen", "G√∂teborgs Centralstation",
    "Nordstan", "Bohus f√§stning", "G√∂teborgs Hamn", "Nya Varvet",
    "√Ñlvsborgs f√§stning", "G√∂teborgs R√•dhus", "Chalmers Tekniska H√∂gskola",
    "G√∂teborgs stadsbibliotek", "G√∂teborgs Konserthus", "Karl Johans Torg",
    "Skat√•s motionscentrum", "R√∂da Sten Kulturfabrik", "Kviberg",
    "Gamla Ullevi", "Vasaplatsen", "√ñstra sjukhuset", "Linn√©staden",
    "Guldheden", "Haga Nygata", "J√§rntorget", "Kvarteret Krukan",
    "G√∂teborgsvarvet", "Volvo Museum"
]

# --- SESSION STATE ---
if "step" not in st.session_state:
    st.session_state.step = "setup"
if "players" not in st.session_state:
    st.session_state.players = []
if "num_players" not in st.session_state:
    st.session_state.num_players = 3
if "assignments" not in st.session_state:
    st.session_state.assignments = []
if "current_index" not in st.session_state:
    st.session_state.current_index = 0
if "reveal_order" not in st.session_state:
    st.session_state.reveal_order = []
if "show_role" not in st.session_state:
    st.session_state.show_role = False

def start_game():
    chosen_word = random.choice(word_list)
    spy_index = random.randint(0, len(st.session_state.players) - 1)
    st.session_state.assignments = [
        "Spy" if i == spy_index else chosen_word for i in range(len(st.session_state.players))
    ]
    st.session_state.reveal_order = list(range(len(st.session_state.players)))
    random.shuffle(st.session_state.reveal_order)
    st.session_state.step = "reveal"
    st.session_state.current_index = 0
    st.session_state.show_role = False

def next_player():
    st.session_state.current_index += 1
    st.session_state.show_role = False

def restart_game():
    # Beh√•ll spelare och antal, nollst√§ll allt annat
    for key in ["assignments", "current_index", "reveal_order", "show_role", "step"]:
        if key in st.session_state:
            del st.session_state[key]
    st.session_state.step = "setup"

# --- Setup step ---
if st.session_state.step == "setup":
    st.subheader("Enter Player Names")
    st.session_state.num_players = st.number_input("Number of players", min_value=3, step=1, value=st.session_state.num_players)
    player_names = []
    for i in range(st.session_state.num_players):
        default_name = st.session_state.players[i] if i < len(st.session_state.players) else ""
        name = st.text_input(f"Player {i+1} name", value=default_name)
        player_names.append(name)

    if st.button("Start Game"):
        if "" in player_names:
            st.error("Please fill in all player names.")
        else:
            st.session_state.players = player_names
            start_game()

# --- Reveal step ---
elif st.session_state.step == "reveal":
    if st.session_state.current_index >= len(st.session_state.players):
        st.success("‚úÖ All players have viewed their roles.")
        if st.button("Restart Game", on_click=restart_game):
            pass
    else:
        player_idx = st.session_state.reveal_order[st.session_state.current_index]
        st.subheader("Reveal Player Role")
        st.write(f"Player: **{st.session_state.players[player_idx]}**")

        if not st.session_state.show_role:
            if st.button("Reveal Role"):
                st.session_state.show_role = True
        else:
            role = st.session_state.assignments[player_idx]
            if role == "Spy":
                st.error("üïµÔ∏è You are the SPY!")
            else:
                st.success(f"Your word is: **{role}**")
            st.button("Next Player", on_click=next_player)


